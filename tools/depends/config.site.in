cross_compiling=yes
host=@use_host@
host_alias=@use_host@

LD=@LD@
CC=@CC@
CXX=@CXX@
CPP=@CPP@
AR=@AR@
AS=@AS@
NM=@NM@
STRIP=@STRIP@
RANLIB=@RANLIB@
OBJDUMP=@OBJDUMP@

if test "@platform_os@" = "ios" ; then
  export AS="@prefix@/@build_cpu@-@build_os@-native/bin/gas-preprocessor.pl @CC@"
  export CCAS="--tag CC @prefix@/@build_cpu@-@build_os@-native/bin/gas-preprocessor.pl @CC@"
fi

CFLAGS="@platform_cflags@ @platform_includes@ -I@prefix@/@use_host@/include $CFLAGS"
LDFLAGS="@platform_ldflags@ -L@prefix@/@use_host@/lib $LDFLAGS"
CXXFLAGS="@platform_cxxflags@ @platform_includes@ -I@prefix@/@use_host@/include $CXXFLAGS"
CPPFLAGS="@platform_cflags@ @platform_includes@ -I@prefix@/@use_host@/include $CPPFLAGS"

export PKG_CONFIG=@prefix@/@build_cpu@-@build_os@-native/bin/pkg-config
export PKG_CONFIG_PATH=@prefix@/@use_host@/lib/pkgconfig
export NASM=@prefix@/@build_cpu@-@build_os@-native/bin/yasm
export MYSQL_CONFIG=@prefix@/@use_host@/bin/mysql_config

PATH=@prefix@/@build_cpu@-@build_os@-native/bin:@use_toolchain@/bin:$PATH
LD_LIBRARY_PATH=@prefix@/@build_cpu@-@build_os@-native/lib:$LD_LIBRARY_PATH

PYTHON_VERSION=2.6
PYTHON_LDFLAGS="-L@prefix@/@use_host@/lib -lpython${PYTHON_VERSION} -lc -ldl -lm -lexpat -lffi -lintl -lutil"
PYTHON_CPPFLAGS=-I@prefix@/@use_host@/include/python${PYTHON_VERSION}
PYTHON_SITE_PKG=@prefix@/@use_host@/lib/python${PYTHON_VERSION}/site-packages
PYTHON_NOVERSIONCHECK=no-check
USE_TEXTUREPACKER_NATIVE_ROOT=@prefix@/@build_cpu@-@build_os@-native

#afps-ng and libomxil-bellagio
ac_cv_func_malloc_0_nonnull=yes

#curl
ac_cv_file__dev_urandom=yes
ac_cv_lib_ssl_SSL_connect=yes

#gettext and libiconv
gl_cv_header_working_stdint_h=yes

#libcec
ac_cv_search_dlopen=-ldl

#libgcrypt
ac_cv_path_GPG_ERROR_CONFIG=@prefix@/@use_host@/bin/gpg-error-config
ac_cv_sys_symbol_underscore=no

#python
ac_cv_func_gethostbyname_r=no
ac_cv_header_sys_un_h=yes

#samba
SMB_BUILD_CC_NEGATIVE_ENUM_VALUES=yes
libreplace_cv_HAVE_C99_VSNPRINTF=yes
samba_cv_HAVE_C99_VSNPRINTF=yes
ac_cv_header_standards_h=no

if test "${platform_os}" = "android"; then
  #samba
  SMB_BUILD_CC_NEGATIVE_ENUM_VALUES=yes
  libreplace_cv_READDIR_GETDIRENTRIES=no
  libreplace_cv_READDIR_GETDENTS=no
  samba_cv_REPLACE_READDIR=no
  samba_cv_HAVE_WRFILE_KEYTAB=yes
  samba_cv_HAVE_GETTIMEOFDAY_TZ=yes
  samba_cv_USE_SETREUID=yes
  samba_cv_HAVE_KERNEL_OPLOCKS_LINUX=yes
  samba_cv_HAVE_IFACE_IFCONF=yes
  samba_cv_HAVE_MMAP=yes
  samba_cv_HAVE_FCNTL_LOCK=yes
  samba_cv_HAVE_SECURE_MKSTEMP=yes
  samba_cv_CC_NEGATIVE_ENUM_VALUES=yes
  samba_cv_fpie=no
  samba_cv_have_longlong=yes
  samba_cv_HAVE_OFF64_T=yes
  samba_cv_HAVE_UT_UT_TYPE=no
  ac_cv_func_srand=yes
  ac_cv_func_rand=yes
fi

if test "${platform_os}" = "ios"; then
  # tweaks for libffi (ios must use llvm-gcc-4.2)
  if test "${PACKAGE_NAME}" = "libffi" ; then
    export CC="@use_toolchain@/bin/llvm-gcc-4.2"
    export CPP="@use_toolchain@/bin/llvm-gcc-4.2 -E"
    unset AS
    unset CCAS
  fi

  # tweaks for flac
  if test "${ac_unique_file}" = "src/flac/main.c" ; then
    # compiler barfs if we use -O3/O2 for flac
    export CFLAGS=`echo ${CFLAGS} | sed 's/-O3/-Os/'`
    export CPPFLAGS=`echo ${CPPFLAGS} | sed 's/-O3/-Os/'`
  fi

  # tweaks for libmpeg2
  if test "${PACKAGE_NAME}" = "libmpeg2" ; then
    export LDFLAGS="${LDFLAGS} -Wl,-read_only_relocs,suppress"
  fi
fi
